{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","key","this","squares","width","Math","sqrt","length","rows","cols","j","square","renderSquare","push","React","Component","Game","state","history","Array","fill","index","stepNumber","xIsNext","step","setState","slice","calculateWinner","concat","status","winner","endedGame","every","s","calculateEnd","moves","map","move","desc","ceil","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c222d1aa.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        return (\n            <Square\n                key={i}\n                value={this.props.squares[i]}\n                onClick={() => this.props.onClick(i)}\n            />\n        );\n    }\n\n    render() {\n        const width = Math.sqrt(this.props.squares.length);\n        let rows = [];\n        for (let i = 0; i < width; i++) {\n            let cols = [];\n            for (let j = 0; j < width; j++) {\n                const square = this.renderSquare(i * width + j);\n                cols.push(square);\n            }\n\n            rows.push(\n                <div key={i} className=\"board-row\">\n                    {cols}\n                </div>\n            );\n        }\n\n        return <div>{rows}</div>;\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [\n                {\n                    squares: Array(9).fill(null),\n                    index: null\n                }\n            ],\n            stepNumber: 0,\n            xIsNext: true\n        };\n    }\n    jumpTo(step) {\n        this.setState({\n            history: this.state.history,\n            stepNumber: step,\n            xIsNext: step % 2 === 0\n        });\n    }\n    handleClick(i) {\n        const history = this.state.history;\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (squares[i] || calculateWinner(squares)) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat({ squares: squares, index: i }),\n            xIsNext: !this.state.xIsNext,\n            stepNumber: history.length\n        });\n    }\n\n    render() {\n        const history = [...this.state.history];\n        const current = history[this.state.stepNumber];\n        const squares = current.squares.slice();\n        const winner = calculateWinner(squares);\n        const endedGame = calculateEnd(squares);\n\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner;\n        } else if (endedGame) {\n            status = 'End game. No winner';\n        } else {\n            status = 'Next player: ' + (this.props.xIsNext ? 'X' : 'O');\n        }\n\n        const moves = history.map((step, move) => {\n            let desc;\n            if (step && step.index != null) {\n                const index = step.index + 1;\n                const [row, column] = [Math.ceil(index / 3), index % 3];\n                desc = 'Go to move (' + row + ', ' + column + ')';\n            } else {\n                desc = move ? 'Go to move #' + move : 'Go to game start';\n            }\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            );\n        });\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        squares={squares}\n                        onClick={i => this.handleClick(i)}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div className=\"status\">{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction calculateEnd(squares) {\n    return squares.every(s => s !== null);\n}\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (\n            squares[a] &&\n            squares[a] === squares[b] &&\n            squares[a] === squares[c]\n        ) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"sourceRoot":""}